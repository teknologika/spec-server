[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project]
name = "spec-server"
version = "v0.1.0"
description = "MCP server for structured feature development through Requirements → Design → Tasks workflow"
readme = "README.md"
license = "MIT"
classifiers = [ "Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.12", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules",]
requires-python = ">=3.12"
dependencies = [ "fastmcp>=0.2.0", "pydantic>=2.0.0", "pathlib-mate>=1.0.0",]
[[project.authors]]
name = "Teknologika"
email = "hello@teknologika.com"

[project.optional-dependencies]
dev = [ "pytest>=7.0.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0", "black>=23.0.0", "isort>=5.12.0", "flake8>=6.0.0", "mypy>=1.0.0",]

[project.scripts]
spec-server = "spec_server.main:main"

[project.urls]
Homepage = "https://github.com/teknologika/spec-server"
Repository = "https://github.com/teknologika/spec-server"
Issues = "https://github.com/teknologika/spec-server/issues"

[tool.black]
line-length = 88
target-version = [ "py312",]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = [ "tests",]
python_files = [ "test_*.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]
addopts = "--cov=spec_server --cov-report=term-missing"

[tool.hatch.build.targets.wheel]
packages = [ "src/spec_server",]

[tool.hatch.build.targets.sdist]
include = [ "/src", "/tests", "/README.md", "/LICENSE",]
