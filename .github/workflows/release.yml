name: Release to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run tests
      run: |
        pytest --cov=spec_server --cov-report=term-missing
    
    - name: Type check
      run: |
        mypy src
    
    - name: Lint check
      run: |
        black --check src tests
        isort --check-only src tests
        flake8 src tests

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write  # For trusted publishing
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: List built packages
      run: |
        ls -la dist/
    
    - name: Publish to PyPI (with API token)
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    
    - name: Publish to PyPI (manual dispatch)
      if: github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

  create-github-release:
    if: github.event_name == 'workflow_dispatch'
    needs: build-and-publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        body: |
          ## Changes in ${{ github.event.inputs.version }}
          
          This release includes:
          - Latest updates to spec-server
          - Bug fixes and improvements
          
          See the [CHANGELOG](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          pip install spec-server==${{ github.event.inputs.version }}
          ```
          
          ## Usage
          
          ```bash
          spec-server --help
          ```
        draft: false
        prerelease: false